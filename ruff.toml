target-version = "py38"

select = [
    "B007", # Loop control variable {name} not used within loop body
    "B014", # Exception handler with duplicate exception
    "C",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "ICN001", # import concentions; {name} should be imported as {asname}
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "SIM105", # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM117", # Merge with-statements that use the same scope
    "SIM118", # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM201", # Use {left} != {right} instead of not {left} == {right}
    "SIM212", # Use {a} if {a} else {b} instead of {b} if not {a} else {a}
    "SIM300", # Yoda conditions. Use 'age == 42' instead of '42 == age'.
    "SIM401", # Use get from dict with default instead of an if block
    "T20",  # flake8-print
    "TRY004", # Prefer TypeError exception for invalid type
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "UP",  # pyupgrade
    "W",  # pycodestyle
]

ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in `__init__`
    "D202",   # No blank lines allowed after function docstring
    "D203",   # 1 blank line required before class docstring
    "D205",   # 1 blank line required between summary line and description
    "D213",   # Multi-line docstring summary should start at the second line
    "D400",   # First line should end with a period
    "D401",   # First line of docstring should be in imperative mood:
    "D406",   # Section name should end with a newline
    "D407",   # Section name underlining
    "D415",   # First line should end with a period, question mark, or exclamation point
    "E501",   # line too long
              # the rules below this line should be corrected
    "E731",   # do not assign a lambda expression, use a def
    "B007",   # Loop control variable `id_` not used within loop body
    "PGH004", # Use specific rule codes when using `noqa`
    "TRY004", # Prefer `TypeError` exception for invalid type
]

extend-exclude = [
    "tests"
]

[flake8-pytest-style]
fixture-parentheses = false

[pyupgrade]
keep-runtime-typing = true

[isort]
# will group `import x` and `from x import` of the same module.
force-sort-within-sections = true
known-first-party = [
    "zigpy",
    "tests",
]
forced-separate = ["tests"]
combine-as-imports = true

[mccabe]
max-complexity = 25
